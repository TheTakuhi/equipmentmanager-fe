variables:
  ENVIRONMENT_NAME: "staging"
  GITLAB_PROJECT_ORIGIN: https://$ACCESS_TOKEN_NAME:$ACCESS_TOKEN_VALUE@$CI_SERVER_HOST/$CI_PROJECT_PATH.git

  BOT_EMAIL: "equipmentmanager@tietoevry.com"
  BOT_NAME: "Equipmentmanager_CI"

stages:
  - merge
  - setup
  - build
  - deploy

cache:
  key: $CI_PIPELINE_ID
  policy: pull
  untracked: true

merge_main_to_staging:
  stage: merge
  environment: $ENVIRONMENT_NAME
  image:
    name: node:18
    pull_policy: if-not-present
  rules:
    - if: $CI_COMMIT_BRANCH == $ENVIRONMENT_NAME
  before_script:
    - git config --global user.email $BOT_EMAIL
    - git config --global user.name $BOT_NAME
  script:
    - git checkout main
    - git checkout $CI_COMMIT_BRANCH
    - git merge main
    - git push -u $GITLAB_PROJECT_ORIGIN $CI_COMMIT_BRANCH
  tags:
    - ah1-docker

install_modules:
  stage: setup
  environment: $ENVIRONMENT_NAME
  image: node:18
  rules:
    - if: $CI_COMMIT_BRANCH == $ENVIRONMENT_NAME
  before_script:
    - git config --global user.email $BOT_EMAIL
    - git config --global user.name $BOT_NAME
    - git config --global pull.rebase true
  script:
    - git checkout -f $CI_COMMIT_BRANCH && git pull
    - npm install -g --force yarn
    - yarn install --frozen-lockfile --no-progress
  cache:
    key: $CI_PIPELINE_ID
    policy: pull-push
    paths:
      - .yarn
      - node_modules
  tags:
    - ah1-docker


build_staging:
  stage: build
  environment: $ENVIRONMENT_NAME
  image:
    name: node:18
    pull_policy: if-not-present
  rules:
    - if: $CI_COMMIT_BRANCH == $ENVIRONMENT_NAME
  before_script:
    - export VITE_APP_PUBLIC_URL=$PUBLIC_URL
    - export VITE_APP_HOST_CORE=$HOST_CORE
    - export VITE_APP_HOST_IDP=$HOST_IDP
    - export VITE_APP_HOST_APPSHUB=$HOST_APPSHUB
    - export VITE_APP_REALM=$REALM
    - export VITE_APP_CLIENT_ID=$CLIENT_ID
    - export VITE_APP_MOCKED=$MOCKED
    - git config --global user.email $BOT_EMAIL
    - git config --global user.name $BOT_NAME
    - git config --global pull.rebase true
  script:
    - git checkout -f $CI_COMMIT_BRANCH && git pull
    - CI=false yarn build
  artifacts:
    expire_in: 1 hour
    paths:
      - build/*
  tags:
    - ah1-docker

deploy_to_staging:
  stage: deploy
  environment: $ENVIRONMENT_NAME
  rules:
    - if: $CI_COMMIT_BRANCH == $ENVIRONMENT_NAME
  script:
    - cp -rf build/* /var/www/equipment-manager/
  tags:
    - ah1-shell
